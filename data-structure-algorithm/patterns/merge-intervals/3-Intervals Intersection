Problem Statement #
Given two lists of intervals, find the intersection of these two lists. Each list consists of disjoint intervals sorted on their start time.

Example 1:
Input: arr1=[[1, 3], [5, 6], [7, 9]], arr2=[[2, 3], [5, 7]]
Output: [2, 3], [5, 6], [7, 7]
Explanation: The output list contains the common intervals between the two lists.

Example 2:
Input: arr1=[[1, 3], [5, 7], [9, 12]], arr2=[[5, 10]]
Output: [5, 7], [9, 10]
Explanation: The output list contains the common intervals between the two lists.


const merge = function(intervals_a, intervals_b) {
	let aIndex = 0, bIndex = 0;
	const output = [];
	while (aIndex < intervals_a.length &&  bIndex < intervals_b.length) {
		aInterval = intervals_a[aIndex];
		bInterval = intervals_b[bIndex];
		aOverlapB = aInterval.start <= bInterval.start && aInterval.end >= bInterval.end;
		bOverlapA = bInterval.start <= aInterval.start && bInterval.end >= aInterval.end;

		if (aOverlapB || bOverlapA) {
			output.push(new Interval(
				Math.max(aInterval.start, bInterval.start),
				Math.min(aInterval.end, bInterval.end)
            ))
        }

        if (aInterval.end < bInterval.end) {
            i += 1;
        } else j += 1;
    }
    return output;
};

