Problem Statement #
Given two lists of intervals, find the intersection of these two lists. Each list consists of disjoint intervals sorted on their start time.

Example 1:
Input: arr1=[[1, 3], [5, 6], [7, 9]], arr2=[[2, 3], [5, 7]]
Output: [2, 3], [5, 6], [7, 7]
Explanation: The output list contains the common intervals between the two lists.

Example 2:
Input: arr1=[[1, 3], [5, 7], [9, 12]], arr2=[[5, 10]]
Output: [5, 7], [9, 10]
Explanation: The output list contains the common intervals between the two lists.


const merge = function(intervals_a, intervals_b) {
  let result = [];
  let indexA = 0, indexB = 0;

  while (indexA < intervals_a.length && indexB < intervals_b.length) {
    const aInterval = intervals_a[indexA];
    const bInterval = intervals_b[indexB];

    const aOverlapB = aInterval.start >= bInterval.start && aInterval.start <= bInterval.end;
    const bOverlapA = bInterval.start >= aInterval.start && bInterval.start <= aInterval.end;

    if (aOverlapB || bOverlapA) {
      result.push(new Interval(
        Math.max(aInterval.start, bInterval.start),
        Math.min(aInterval.end, bInterval.end)
      ))
    }

    if (aInterval.end < bInterval.end) indexA += 1;
    else indexB += 1;
  }

  return result;
};

